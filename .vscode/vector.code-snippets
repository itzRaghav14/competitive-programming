{
	// Place your competitive-programming workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"vector<int>": {
		"scope": "cpp",
		"prefix": "vi",
		"body": [
			"vector<int>"
		]
	},

	"vector<long long>": {
		"scope": "cpp",
		"prefix": "vll",
		"body": [
			"vector<long long>"
		]
	},

	"vector<vector<int>>": {
		"scope": "cpp",
		"prefix": "vvi",
		"body": [
			"vector<vector<int>>"
		]
	},

	"vector<vector<long long>>": {
		"scope": "cpp",
		"prefix": "vvll",
		"body": [
			"vector<vector<long long>>"
		]
	},

	"pair<int,int>": {
		"scope": "cpp",
		"prefix": "pi",
		"body": [
			"pair<int,int>"
		]
	},

	"vector<pair<int,int>>": {
		"scope": "cpp",
		"prefix": "vpi",
		"body": [
			"vector<pair<int,int>>"
		]
	}
}